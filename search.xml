<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/06/25/%E5%88%86%E7%B1%BB%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/06/25/%E5%88%86%E7%B1%BB%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<!-- # VSCode 终端hexo clean; hexo shexo clean; hexo g; hexo dgit add .; git commit -m "npm publish"; npm version patch;git push<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">alert(&#x27;Hello World!&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure> --><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>模板下载/数据导出</title>
      <link href="/2023/06/21/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E4%B8%8B%E8%BD%BD/"/>
      <url>/2023/06/21/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="二、数据模板的下载和数据的导出-—-excel"><a href="#二、数据模板的下载和数据的导出-—-excel" class="headerlink" title="二、数据模板的下载和数据的导出 — excel"></a>二、数据模板的下载和数据的导出 — excel</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// ★ 根据调用后端数据接口： dowmloadExcel</span><br><span class="line">// ★ 封装 dowmloadExcel 接口时，要添加 responseType: &#x27;blob&#x27; 这个参数</span><br><span class="line">methods:&#123;</span><br><span class="line">  async getExcel()&#123;</span><br><span class="line">  const res = await dowmloadExcel()</span><br><span class="line">  const link = document.createElement(&#x27;a&#x27;) // 创建隐藏的 a 链接</span><br><span class="line">  const blob = new Blob([res],&#123;type: &#x27;application/vnd.ms-excel&#x27;&#125;) // 创建 Blob 对象</span><br><span class="line">  link.style.display = &#x27;none&#x27; // 隐藏 link</span><br><span class="line">  link.href = URL.createObjectURL(blob)</span><br><span class="line">  link.download = &#x27;xxxx.xlsx&#x27;; // 设置 excel 表格名称</span><br><span class="line">  document.body.appendChild(link); // body 中追加 link</span><br><span class="line">  link.click(); // 模拟点击事件</span><br><span class="line">  document.body.removeChild(link); // 删除 a 标签</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VUE2.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、时间处理插件： moment 的使用</title>
      <link href="/2023/06/21/%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>/2023/06/21/%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="时间处理插件：moment-的使用"><a href="#时间处理插件：moment-的使用" class="headerlink" title="时间处理插件：moment 的使用"></a>时间处理插件：moment 的使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一、时间处理插件：moment 的使用</span><br><span class="line">1.首先下载 npm i moment </span><br><span class="line">2.然后在组件中引入 import moment from &#x27;moment&#x27;</span><br><span class="line">3.然后在时间处理的方法中 moment(&#x27;要处理的时间&#x27;).format(&#x27;YYYY-MM-DD h:mm:ss&#x27;) // 2023-05-10 17:36:40</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VUE2.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客简介</title>
      <link href="/2023/06/21/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/06/21/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="我的博客简介"><a href="#我的博客简介" class="headerlink" title="我的博客简介"></a>我的博客简介</h2><p>★博客作者：大东<br>★创建时间：二零二三年六月二十一日<br>★岗位职责：Web前端开发工程师<br>★主要内容：<br>        1.研究学习技术趋势；<br>        2.分享有趣技术要点；<br>        3.记录工作中易难点；<br>        4.提升个人开发水平；<br>        (前端JS和后端JAVA)<br>★作者寄语：未来可期，对自己多一些肯定！<br>💖💖💖💖💖💖💖💖💖💖💖💖💖💖💖</p><p>🤞技术交流:<br>🤞QQ:804567467</p>]]></content>
      
      
      
        <tags>
            
            <tag> 简介 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme='dark'] #footer::before {  background: transparent !important;}[data-theme='dark'] #page-header::before {  background: transparent !important;}/* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme='dark'] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme='dark'] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 2px 2px 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme='dark'] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 公告 */#aside-content > .card-widget.card-announcement {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > .card-widget.card-categories {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > .card-widget.card-recent-post {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > .card-widget.card-webinfo {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > .card-widget.card-clock {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > .card-widget.card-tags {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#aside-content > .sticky_layout > #card-toc {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}#recent-posts > .recent-post-item {  background: #0af3ff;}@-webkit-keyframes Gradient1 {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient1 {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient1 {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}#article-container pre,#article-container figure.highlight {  background: #000;}.line {  color: #fff !important;}.line::before {  color: #fff !important;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {  try {    return window.getComputedStyle      ? window.getComputedStyle(el)[attr]      : el.currentStyle[attr];  } catch (e) { }  return "";};class Cursor {  constructor() {    this.pos = { curr: null, prev: null };    this.pt = [];    this.create();    this.init();    this.render();  }  move (left, top) {    this.cursor.style["left"] = `${left}px`;    this.cursor.style["top"] = `${top}px`;  }  create () {    if (!this.cursor) {      this.cursor = document.createElement("div");      this.cursor.id = "cursor";      this.cursor.classList.add("hidden");      document.body.append(this.cursor);    }    var el = document.getElementsByTagName('*');    for (let i = 0; i < el.length; i++)      if (getStyle(el[i], "cursor") == "pointer")        this.pt.push(el[i].outerHTML);    document.body.appendChild((this.scr = document.createElement("style")));    // 这里改变鼠标指针的颜色 由svg生成    // this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,") 4 4, auto}`;  }  refresh () {    this.scr.remove();    this.cursor.classList.remove("hover");    this.cursor.classList.remove("active");    this.pos = { curr: null, prev: null };    this.pt = [];    this.create();    this.init();    this.render();  }  init () {    document.onmouseover = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");    document.onmouseout = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");    document.onmousemove = e => { (this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = { x: e.clientX - 8, y: e.clientY - 8 }; this.cursor.classList.remove("hidden"); };    document.onmouseenter = e => this.cursor.classList.remove("hidden");    document.onmouseleave = e => this.cursor.classList.add("hidden");    document.onmousedown = e => this.cursor.classList.add("active");    document.onmouseup = e => this.cursor.classList.remove("active");  }  render () {    if (this.pos.prev) {      this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);      this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);      this.move(this.pos.prev.x, this.pos.prev.y);    } else {      this.pos.prev = this.pos.curr;    }    requestAnimationFrame(() => this.render());  }}(() => {  CURSOR = new Cursor();  // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date()function createtime () {  now.setTime(now.getTime() + 1e3)  var e = new Date('06/21/2023 00:00:00'),    t = Math.trunc(234e8 + ((now - e) / 1e3) * 17),    a = (t / 1496e5).toFixed(6),    o = new Date('06/21/2023 00:00:00'),    n = (now - o) / 1e3 / 60 / 60 / 24,    r = Math.floor(n),    i = (now - o) / 1e3 / 60 / 60 - 24 * r,    s = Math.floor(i)  1 == String(s).length && (s = '0' + s)  var d = (now - o) / 1e3 / 60 - 1440 * r - 60 * s,    l = Math.floor(d)  1 == String(l).length && (l = '0' + l)  var g = (now - o) / 1e3 - 86400 * r - 3600 * s - 60 * l,    b = Math.round(g)  1 == String(b).length && (b = '0' + b)  let c = ''    ; (c =      s < 18 && s >= 9        ? `<div style="font-size:13px;font-weight:bold">本站运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i>  <br> 一看你就在摸鱼😂😂😂</div>`        : `<div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 半夜不睡觉？还在偷偷卷？🤣</div>`),      document.getElementById('workboard') &&      (document.getElementById('workboard').innerHTML = c)}setInterval(() => {  createtime()}, 1e3)]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
